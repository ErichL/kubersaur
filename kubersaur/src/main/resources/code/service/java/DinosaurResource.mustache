package {{organisationPackage}}.{{organisationName}}.{{microserviceName}}.api;

import {{organisationPackage}}.{{organisationName}}.{{microserviceName}}.api.model.Dinosaur;
import {{organisationPackage}}.{{organisationName}}.{{microserviceName}}.api.model.SuccessResponse;
import {{organisationPackage}}.{{organisationName}}.{{microserviceName}}.api.{{microserviceNameCamelCase}}DinosaurService;
import {{organisationPackage}}.{{organisationName}}.{{microserviceName}}.service.DomainService;

import javax.inject.Inject;

public class {{microserviceNameCamelCase}}DinosaurResource implements {{microserviceNameCamelCase}}DinosaurService {

    private DomainService domainService;

    @Inject
    public {{microserviceNameCamelCase}}DinosaurResource(DomainService domainService){
        this.domainService = domainService;
    }

    @Override
    public SuccessResponse createDinosaur(String id, Dinosaur dinosaur) {
        return new SuccessResponse();
    }

    @Override
    public SuccessResponse deleteDinosaur(String id) {
        domainService.delete(id);
        return new SuccessResponse();
    }

    @Override
    public Dinosaur getDinosaur(String id) {
        return new Dinosaur()
            .label("kubersaurus")
            .title("kubersaur");
    }

    @Override
    public SuccessResponse updateDinosaur(String id, Dinosaur dinosaur) {
        domainService.update(id, dinosaur);
        return new SuccessResponse();
    }

}

