using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using System.Linq;
using Models;
using {{organisationPackage}}.{{microserviceNameCamelCase}}.api.Api;
using {{organisationPackage}}.{{microserviceNameCamelCase}}.api.Client;
using {{organisationPackage}}.{{microserviceNameCamelCase}}.api.Model;
using Microsoft.Extensions.Logging;
using dotnet_microservice_support;

namespace Controllers
{
    public class DinosaurController : AbstractDotnetasaurusServiceApiSync
    {

        public DinosaurController(IClientFactory clientFactory)
        {
        }

        public override IReadableConfiguration ConfigurationImpl { get => throw new System.NotImplementedException(); set => throw new System.NotImplementedException(); }
        public override ExceptionFactory ExceptionFactoryImpl { get => throw new System.NotImplementedException(); set => throw new System.NotImplementedException(); }

        public override SuccessResponse CreateModuleStepTemplate(string module, string step, ModuleStep moduleStep)
        {
            throw new System.NotImplementedException();
        }

        public override ApiResponse<SuccessResponse> CreateModuleStepTemplateWithHttpInfo(string module, string step, ModuleStep moduleStep)
        {
            throw new System.NotImplementedException();
        }

        public override SuccessResponse DeleteModuleStepTemplate(string module, string step)
        {
            throw new System.NotImplementedException();
        }

        public override ApiResponse<SuccessResponse> DeleteModuleStepTemplateWithHttpInfo(string module, string step)
        {
            throw new System.NotImplementedException();
        }

        public override string GetBasePath()
        {
            throw new System.NotImplementedException();
        }

        public override ModuleStep GetModule(string module)
        {
            return new ModuleStep(){
                State = new List<StepState>{new StepState(){Title="hello world dotnet"}}
            };
        }

        public override ModuleStep GetModuleStepTemplate(string module, string step)
        {
            return new ModuleStep(){
                State = new List<StepState>{new StepState{Title="foogoo"}}
            };

        }



        public override ApiResponse<ModuleStep> GetModuleStepTemplateWithHttpInfo(string module, string step)
        {
            throw new System.NotImplementedException();
        }

        public override ApiResponse<ModuleStep> GetModuleWithHttpInfo(string module)
        {
            throw new System.NotImplementedException();
        }

        public override SuccessResponse UpdateModuleStepTemplate(string module, string step, ModuleStep moduleStep)
        {
            throw new System.NotImplementedException();
        }

        public override ApiResponse<SuccessResponse> UpdateModuleStepTemplateWithHttpInfo(string module, string step, ModuleStep moduleStep)
        {
            throw new System.NotImplementedException();
        }
    }
}